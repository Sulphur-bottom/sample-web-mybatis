<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sunivo</groupId>
	<artifactId>sample-webservice</artifactId>
	<packaging>war</packaging>
	<version>1.1.0-SNAPSHOT</version>
	<name>sample-webservice Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.2.6.RELEASE</org.springframework.version>   
	</properties>
	<repositories>
		<repository>
			<id>public</id>
			<name>Public Repositories</name>
			<url>http://192.168.0.248:8081/nexus/content/groups/public/</url>
		</repository>
	</repositories>
	<dependencies>
		<!-- 引入interface -->
		<dependency>
			<groupId>com.sunivo</groupId>
            <artifactId>sample-ws-interfaces</artifactId>
			<version>2.0.0-SNAPSHOT</version>
		</dependency>

		<!-- commons begin -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>
		<!-- commons end -->
		
		<!-- log begin -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>0.9.28</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.28</version>
			<type>jar</type>
		</dependency>
		<!-- log end -->
		
		<!-- quartz begin -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		<!-- quartz end -->

		<!-- WEB begin -->
		  <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-core</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Expression Language (depends on spring-core) Define this if you use    
            Spring Expression APIs (org.springframework.expression.*) -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-expression</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define    
            this if you use Spring Bean APIs (org.springframework.beans.*) -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-beans</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core,    
            spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-aop</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Application Context (depends on spring-core, spring-expression, spring-aop,    
            spring-beans) This is the central artifact for Spring's Dependency Injection    
            Container and is generally always defined -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-context</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Various Application Context utilities, including EhCache, JavaMail,    
            Quartz, and Freemarker integration Define this if you need any of these integrations -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-context-support</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Transaction Management Abstraction (depends on spring-core, spring-beans,    
            spring-aop, spring-context) Define this if you use Spring Transactions or    
            DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-tx</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Web application development utilities applicable to both Servlet and    
            Portlet Environments (depends on spring-core, spring-beans, spring-context)    
            Define this if you use Spring MVC, or wish to use Struts, JSF, or another    
            web framework with Spring (org.springframework.web.*) -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-web</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans,    
            spring-context, spring-web) Define this if you use Spring MVC with a Servlet    
            Container such as Apache Tomcat (org.springframework.web.servlet.*) -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-webmvc</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
        <!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans,    
            spring-context, spring-web) Define this if you use Spring MVC with a Portlet    
            Container (org.springframework.web.portlet.*) -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-webmvc-portlet</artifactId>   
            <version>${org.springframework.version}</version>   
        </dependency>   
  
   	    <!-- spring jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.2.6.RELEASE</version>
		</dependency>
  
        <!-- Support for testing Spring applications with tools such as JUnit and    
            TestNG This artifact is generally always defined with a 'test' scope for    
            the integration testing framework and unit testing stubs -->   
        <dependency>   
            <groupId>org.springframework</groupId>   
            <artifactId>spring-test</artifactId>   
            <version>${org.springframework.version}</version>   
            <scope>test</scope>   
        </dependency>   
        
        <!-- aspectj织入者配置 -->   
        <dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.4</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<!-- WEB end -->
		
		<!-- db pool MyBatis begin-->
		<!-- bonecp db pool  -->
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<version>0.7.1.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp-spring</artifactId>
			<version>0.7.1.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r05</version>
		</dependency>
		
		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.2.3</version>
		</dependency>
		
		<!-- mybatis与spring的整合包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.1</version>
		</dependency>
		
		<!-- 支持mybatis lazyload -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
		
		<!-- cglib 需要依赖的包 -->
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>3.3.1</version>
		</dependency>
		
		<!-- mysql driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.27</version>
		</dependency>
		<!-- DB MyBatis end-->
		
		<!-- testNg -->
		<dependency>
		  <groupId>org.testng</groupId>
		  <artifactId>testng</artifactId>
		  <version>6.1.1</version>
		  <scope>test</scope>
		</dependency>
		
		<!-- dubbo begin -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>2.5.3</version>
			<exclusions>
				<exclusion>
					<artifactId>spring</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- dubbo end -->
		
		<!-- zookeeper client begin -->
		<dependency>
			<groupId>com.netflix.curator</groupId>
			<artifactId>curator-framework</artifactId>
			<version>1.3.3</version>
		</dependency>
		<!-- zookeeper client end -->
		
		<!-- 高性能java反射类库 -->
		<dependency>
			<groupId>com.googlecode</groupId>
			<artifactId>reflectasm</artifactId>
			<version>1.01</version>
			<exclusions>
				<exclusion>
					 <groupId>asm</groupId>
		             <artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
	</dependencies>
	<build>
		<finalName>sample-webservice</finalName>
	</build>
</project>
