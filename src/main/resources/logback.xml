<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
	<!-- 定义日志输出目录 -->
	<property name="LOG_HOME" value="/sunivolog/log" />
	<!-- 控制台输出日志 -->
	<appender name="stdOut" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{ip}] [%thread] %-5level %logger{36} -%msg%n</pattern>
		</layout>
	</appender>
	
	<appender name="appLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 支持多JVM同时操作同一个日志文件 -->
		<prudent>true</prudent>
		<Encoding>UTF-8</Encoding>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--在工程目录下自动生成logs文件夹 -->
			<FileNamePattern>${LOG_HOME}/app.log.%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<!-- 最多30个文件 -->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{ip}] [%thread] %-5level %logger{36} -%msg%n</pattern>
		</layout>
		<!-- 过滤器，只记录INFO级别的日志 -->
		<!-- <filter class="ch.qos.logback.classic.filter.LevelFilter"> <level>INFO</level> 
			<onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> -->
	</appender>
	
	<!-- ibatis调用错误日志输出 -->
	<appender name="iBatisLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 支持多JVM同时操作同一个日志文件 -->
		<prudent>true</prudent>
		<Encoding>UTF-8</Encoding>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--在工程目录下自动生成logs文件夹 -->
			<FileNamePattern>${catalina.home}/logs/IBATIS/iBatis.log.%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<!-- 最多30个文件 -->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
		   <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{ip}] [%thread] %-5level %logger{36} -%msg%n</pattern>
		</layout>
		<!-- 过滤器，只记录INFO级别的日志 -->
		<!-- <filter class="ch.qos.logback.classic.filter.LevelFilter"> <level>INFO</level> 
			<onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> -->
	</appender>
	
	<!-- sql错误日志输出 -->
	<appender name="sqlLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 支持多JVM同时操作同一个日志文件 -->
		<prudent>true</prudent>
		<Encoding>UTF-8</Encoding>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--在工程目录下自动生成logs文件夹 -->
			<FileNamePattern>${catalina.home}/logs/SQL/sql.log.%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<!-- 最多30个文件 -->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			 <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{ip}] [%thread] %-5level %logger{36} -%msg%n</pattern>
		</layout>
		<!-- 过滤器，只记录INFO级别的日志 -->
		<!-- <filter class="ch.qos.logback.classic.filter.LevelFilter"> <level>INFO</level> 
			<onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> -->
	</appender>
	
	<root level="DEBUG">
		<appender-ref ref="stdOut" />
		<appender-ref ref="appLogAppender" />
		<appender-ref ref="iBatisLogAppender" />
		<appender-ref ref="sqlLogAppender" />
		<appender-ref ref="serverStartErrorLog" />
	</root>

	<!-- 设置app日志输出 -->
    <logger name="com.sunivo.ws" additivity="false"> 
        <level value="DEBUG" />   
        <appender-ref ref="stdOut" /> 
        <appender-ref ref="appLogAppender" /> 
    </logger>
    
	<!-- 设置类名限制输出的通道（ibatis） -->
	<logger name="com.ibatis" additivity="false">
		<level value="DEBUG" />
		<appender-ref ref="iBatisLogAppender" />
	</logger>

	<!-- 设置类名限制输出的通道（SimpleDataSource） -->
	<logger name="com.ibatis.common.jdbc.SimpleDataSource"
		additivity="false">
		<level value="ERROR" />
		<appender-ref ref="iBatisLogAppender" />
	</logger>

	<!-- 设置类名限制输出的通道（SrciptRunner） -->
	<logger name="com.ibatis.common.jdbc.ScriptRunner" additivity="false">
		<level value="ERROR" />
		<appender-ref ref="iBatisLogAppender" />
	</logger>

	<!-- 设置类名限制输出的通道（SqlMapClientDelegate） -->
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate"
		additivity="false">
		<level value="ERROR" />
		<appender-ref ref="iBatisLogAppender" />
	</logger>

	<!-- 配置类名限制输出的通道（RedisCache） -->
	<logger name="com.ibatis.sqlmap.engine.cache.redis" additivity="true">
		<level value="ERROR" />
		<appender-ref ref="iBatisLogAppender" />
	</logger>

	<!-- 设置类名限制输出的通道（Connection） -->
	<logger name="java.sql.Connection" additivity="false">
		<level value="ERROR" />
		<appender-ref ref="sqlLogAppender" />
	</logger>

	<!-- 设置类名限制输出的通道（Statement） -->
	<logger name="java.sql.Statement" additivity="false">
		<level value="ERROR" />
		<appender-ref ref="sqlLogAppender" />
	</logger>

	<!-- 设置类名限制输出的通道（PreparedStatement） -->
	<logger name="java.sql.PreparedStatement" additivity="false">
		<level value="ERROR" />
		<appender-ref ref="sqlLogAppender" />
	</logger>

	<!-- 设置类名限制输出的通道（ResultSet） -->
	<logger name="java.sql.ResultSet" additivity="false">
		<level value="ERROR" />
		<appender-ref ref="sqlLogAppender" />
	</logger>
</configuration>